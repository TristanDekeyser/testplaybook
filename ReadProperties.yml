---
- name: Clone of update GitHub repo en lees variabelen
  hosts: localhost
  tasks:
    - name: Controleer of de repository al bestaat
      stat:
        path: /tmp/client_configuration
      register: repo_exists

    - name: Clone de GitHub repository indien nodig
      git:
        repo: "git@git.is4u.be:stage/stage-2025-ansible-tower/client-configurations.git"
        dest: /tmp/client_configuration
        version: main
      when: not repo_exists.stat.exists

    - name: Pull de laatste wijzigingen
      command: git -C /tmp/client_configuration pull
      register: git_pull_result
      when: repo_exists.stat.exists
      changed_when: "'Already up to date.' not in git_pull_result.stdout"

    - name: Bepaal gewijzigde bestanden (alleen bij wijzigingen)
      command: git -C /tmp/client_configuration diff --name-status HEAD~1 HEAD
      register: git_diff_result
      when: git_pull_result.changed

    - name: Parse gewijzigde bestanden
      set_fact:
        created_files: "{{ git_diff_result.stdout_lines | select('search', '^A\\s+') | map('regex_replace', '^A\\s+', '') | list }}"
        updated_files: "{{ git_diff_result.stdout_lines | select('search', '^M\\s+') | map('regex_replace', '^M\\s+', '') | list }}"
      when: git_pull_result.changed

    - name: Toon gewijzigde bestanden (debug)
      debug:
        msg: "{{ {'Created Files': created_files, 'Updated Files': updated_files} }}"
      when: git_pull_result.changed

    - name: Lees en transformeer variabelen voor gewijzigde bestanden
      rename_vars:
        file_path: "/tmp/client_configuration/{{ item }}"
      register: transformed_clients
      loop: "{{ created_files + updated_files }}"
      when: git_pull_result.changed

    - name: Sla getransformeerde clients op
      set_fact:
        clients: "{{ transformed_clients.results | map(attribute='transformed_vars') | list }}"
      when: git_pull_result.changed

    - name: Bewaar de client-configuratie in een YAML-bestand
      copy:
        content: "{{ clients | to_yaml }}"
        dest: /tmp/clients.yml

- name: Voeg OAuth-clients toe aan IBM ISAM
  hosts: isam
  gather_facts: no
  tasks:
    - name: Laad getransformeerde clients in
      set_fact:
        global_clients: "{{ lookup('file', '/tmp/clients.yml') | from_yaml }}"

    - name: Converteer de YAML-strings naar dictionaries
      set_fact:
        global_clients_parsed: "{{ global_clients | map('from_yaml') | list }}"

    - name: Stel variabelen in voor elke OAuth-client
      set_fact:
        set_oauth_client_clientId: "{{ client.set_oauth_client_clientId }}"
        set_oauth_client_clientSecret: "{{ client.set_oauth_client_clientSecret }}"
        set_oauth_client_companyName: "{{ client.set_oauth_client_companyName }}"
        set_oauth_client_definitionName: "{{ client.set_oauth_client_definitionName }}"
        set_oauth_client_name: "{{ client.set_oauth_client_name }}"
        set_oauth_client_redirectUri: "{{ client.set_oauth_client_redirectUri }}"
        set_oauth_client_requirePkce: "{{ client.set_oauth_client_requirePkce }}"
      loop: "{{ global_clients_parsed }}"
      loop_control:
        loop_var: client

    - name: Voeg OAuth-client toe met juiste variabelen
      ansible.builtin.include_role:
        name: ibm.isam.set_oauth_client
      loop: "{{ global_clients_parsed }}"
      loop_control:
        loop_var: client
